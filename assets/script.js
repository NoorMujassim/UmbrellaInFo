(function(){ // Cookie consent / analytics preference manager (function(){ try{ const banner = document.getElementById('cookie-consent'); const btnAccept = document.getElementById('cc-accept'); const btnDecline = document.getElementById('cc-decline'); const manage = document.getElementById('cc-manage'); if(!banner || !btnAccept || !btnDecline) return; function showBanner(){ banner.style.display = ''; banner.setAttribute('aria-hidden','false'); banner.classList.add('visible'); banner.tabIndex = -1; // allow focus programmatically // focus accept button for quick keyboard users setTimeout(()=> btnAccept.focus(), 120); } function hideBanner(){ banner.style.display = 'none'; banner.setAttribute('aria-hidden','true'); } function setConsent(value){ try{ localStorage.setItem('cookie_consent', value); }catch(e){} } btnAccept.addEventListener('click', function(){ setConsent('granted'); hideBanner(); try{ if(window.loadGtag) window.loadGtag(); }catch(e){} }); btnDecline.addEventListener('click', function(){ setConsent('denied'); hideBanner(); }); // Manage link re-opens the banner so users can change their choice if(manage){ manage.addEventListener('click', function(e){ e.preventDefault(); showBanner(); }); } // show banner only when no consent recorded try{ const stored = localStorage.getItem('cookie_consent'); if(!stored){ // show with a small delay to avoid interrupting page paint setTimeout(showBanner, 800); } else if(stored === 'granted'){ // ensure gtag is loaded if previously granted setTimeout(()=> { try{ if(window.loadGtag) window.loadGtag(); }catch(e){} }, 200); } }catch(e){ /* ignore storage errors */ } // Keyboard accessibility: allow Esc to close when visible document.addEventListener('keydown', function(e){ if(e.key === 'Escape' && banner.getAttribute('aria-hidden') === 'false'){ hideBanner(); } }); }catch(e){ console.warn('cookie consent manager failed', e); } })(); // Lightweight, reusable GA loader (does not auto-run). window.__gtag_loaded = window.__gtag_loaded || false; window.loadGtag = function(){ try{ const meta = document.querySelector('meta[name="ga-measurement-id"]'); if(!meta) return false; const id = (meta.content||"").trim(); if(!id || id === 'G-XXXXXXXXXX' || !/^G-[A-Z0-9]{6,}$/i.test(id)) return false; if(window.__gtag_loaded) return true; // inject gtag script const s = document.createElement('script'); s.async = true; s.src = 'https://www.googletagmanager.com/gtag/js?id=' + encodeURIComponent(id); document.head.appendChild(s); window.dataLayer = window.dataLayer || []; function gtag(){ dataLayer.push(arguments); } window.gtag = gtag; gtag('js', new Date()); // anonymize IP for additional privacy gtag('config', id, { 'anonymize_ip': true }); window.__gtag_loaded = true; return true; }catch(e){ console.warn('loadGtag failed', e); return false; } }; // Auto-load when prior consent was given (persisted in localStorage) try{ const consent = localStorage.getItem('cookie_consent'); if(consent === 'granted'){ // defer slightly so page visual load isn't blocked setTimeout(()=>{ window.loadGtag(); }, 300); } }catch(e){ /* ignore storage errors */ } })(); (function(){ const modal = document.getElementById('projectModal'); const titleEl = modal.querySelector('.modal-title'); const bodyEl = modal.querySelector('.proj-body-text'); const tagsEl = modal.querySelector('.modal-tags'); const linkEl = modal.querySelector('.modal-open-link'); const closeBtn = modal.querySelector('.modal-close'); const thumbEl = modal.querySelector('[data-thumb]'); const toolsEl = modal.querySelector('.modal-tools'); let lastFocused = null; function openModal(data){ lastFocused = document.activeElement; titleEl.textContent = data.title; bodyEl.textContent = data.desc; // populate tools area (if provided) otherwise use tags toolsEl.innerHTML = ''; const tools = (data.tools || data.tags || '').split(',').map(t=>t.trim()).filter(Boolean); tools.forEach(t=>{ const s=document.createElement('div'); s.className='tag'; s.textContent=t; toolsEl.appendChild(s); }); // tag chips tagsEl.innerHTML = ''; (data.tags || '').split(',').map(t=>t.trim()).filter(Boolean).forEach(t=>{ const d=document.createElement('div'); d.className='tag'; d.textContent=t; tagsEl.appendChild(d); }); linkEl.href = data.link || '#'; // thumbnail thumbEl.innerHTML = ''; if(data.thumb){ const img=document.createElement('img'); img.src=data.thumb; img.alt = data.title + ' thumbnail'; img.style.width='100%'; img.style.height='100%'; img.style.objectFit='cover'; thumbEl.appendChild(img); } else { thumbEl.style.background='linear-gradient(135deg,#eef2ff,#f0f7ff)'; } modal.classList.add('show'); modal.setAttribute('aria-hidden','false'); // focus close button closeBtn.focus(); } function closeModal(){ modal.classList.remove('show'); modal.setAttribute('aria-hidden','true'); if(lastFocused && typeof lastFocused.focus === 'function') lastFocused.focus(); } document.querySelectorAll('.projects .proj').forEach(el=>{ function handler(){ openModal({ title: el.getAttribute('data-title') || el.querySelector('h4')?.innerText || 'Project', desc: el.getAttribute('data-desc') || el.querySelector('p')?.innerText || '', tags: el.getAttribute('data-tags') || '', tools: el.getAttribute('data-tools') || el.getAttribute('data-tags') || '', thumb: el.getAttribute('data-thumb') || '', link: el.getAttribute('data-link') || '#' }); } el.addEventListener('click', handler); el.addEventListener('keydown', (ev)=>{ if(ev.key === 'Enter' || ev.key === ' ') { ev.preventDefault(); handler(); } }); }); // .proj-row markup is now static in the HTML; no runtime injection required closeBtn.addEventListener('click', closeModal); modal.addEventListener('click', (ev)=>{ if(ev.target === modal) closeModal(); }); document.addEventListener('keydown', (ev)=>{ if(ev.key === 'Escape' && modal.classList.contains('show')) closeModal(); }); })(); // Theme toggle logic const themeToggle = document.getElementById('theme-toggle'); function setTheme(theme) { // reduced-motion check const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches; if(!prefersReduced){ document.documentElement.classList.add('theme-switching'); // ensure the class is removed after the CSS transition window.setTimeout(()=> document.documentElement.classList.remove('theme-switching'), 300); } document.documentElement.setAttribute('data-theme', theme); localStorage.setItem('theme', theme); if(theme === 'light') themeToggle.textContent = '☀️'; else themeToggle.textContent = '🌙'; } // On load, set theme from localStorage; default to light when not set (function(){ // Calendly lazy loader: injects an iframe only when the user requests to schedule const saved = localStorage.getItem('theme'); if(saved) { setTheme(saved); } else { // Default to light for consistent appearance unless the user has saved a preference setTheme('light'); } })(); themeToggle.addEventListener('click', function(){ const current = document.documentElement.getAttribute('data-theme') === 'light' ? 'dark' : 'light'; setTheme(current); // accessibility: reflect pressed state themeToggle.setAttribute('aria-pressed', String(current === 'light')); }); // utility document.getElementById('year').textContent = new Date().getFullYear(); // project modal (handled in the main script at the end of the file) // Enhance navlink focus/hover for keyboard users and add a tiny click accent for the resume button (function(){ try{ const navlinks = Array.from(document.querySelectorAll('.navlink')); navlinks.forEach(a=>{ a.addEventListener('keydown', (e)=>{ if(e.key === 'Enter' || e.key === ' ') a.click(); }); }); const resume = document.querySelector('.btn'); if(resume){ resume.addEventListener('click', (e)=>{ // tiny visual feedback: pulse the button then allow default resume.animate([ { transform: 'scale(1)', boxShadow: getComputedStyle(resume).boxShadow }, { transform: 'scale(0.98)', boxShadow: '0 4px 12px rgba(0,0,0,0.06)' }, { transform: 'scale(1)', boxShadow: getComputedStyle(resume).boxShadow } ], { duration: 260, easing: 'ease-out' }); }); } }catch(err){ console.warn('nav enhancement failed', err); } })(); // Contact card equalization is handled via CSS Grid (grid-auto-rows:1fr + height:100%) // Ensure any .proj with a data-link has a visible compact Jump button (function(){ try{ document.querySelectorAll('.proj').forEach(p=>{ const link = p.dataset.link; if(!link) return; const h4 = p.querySelector('h4'); if(!h4) return; if(h4.querySelector('.proj-icon')) return; const a = document.createElement('a'); a.className = 'proj-icon'; a.href = link; a.target = '_blank'; a.rel = 'noopener noreferrer'; a.setAttribute('aria-label', `Jump on Project: ${p.dataset.title || 'Project'}`); a.title = 'Jump on Project'; a.innerHTML = `<svg width=